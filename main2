import java.util.Scanner;
import java.text.DecimalFormat;

//buat kelas menu dengan dengan 3 atribut nama, harga dan kategori
class Menu{
    String name;
    double price;
    String category;

    public Menu(String name, double price, String category){
        this.name = name;
        this.price = price;
        this.category = category;
    }

    public String getName(){
        return name;
    }

    public double getPrice(){
        return price;
    }

    public String getCategory(){
        return category;
    }

    public void setPrice(double price){
        this.price = price;
    }
}

public class Main{
    //membuat array list menu makanan dan minuman
    private static Menu[] menuList = {
        new Menu("Nasi Goreng Biasa", 15000, "Makanan"),
        new Menu("Nasi Goreng Seafood", 30000, "Makanan"),
        new Menu("Nasi Goreng Ayam", 20000, "Makanan"),
        new Menu("Nasi Goreng Sapi", 40000, "Makanan"),
        new Menu("Es Teh", 5000, "Minuman"),
        new Menu("Air mineral", 3000, "Minuman"),
        new Menu("Jus Mangga", 10000, "Minuman"),
        new Menu("Jus jeruk", 8000, "Minuman"),
    };

    private static final DecimalFormat format = new DecimalFormat("#,##0.00");
    private static Scanner scanner = new Scanner(System.in);

    //membuat menu makanan dan minuman yang akan ditampilkan
    public static void tampilkanMenu(){
        System.out.println("===> Daftar Menu <===");
        System.out.println("Makanan: ");
        for(Menu menu : menuList){
            if(menu.category.equals("Makanan")){
                System.out.println(menu.name + " -- Rp " + format.format(menu.price));
            }
        }
        System.out.println("\nMinuman: ");
        for(Menu menu : menuList){
            if(menu.category.equals("Minuman")){
                System.out.println(menu.name + " -- Rp " + format.format(menu.price));
            }
        }
    }

    public static void tampilkanMenuUtama(){
        boolean running = true;

        while(running){
            System.out.println("<<< Menu Utama >>>");
            System.out.println("1. Menu Pemesanan");
            System.out.println("2. Menu Pengelolaan");
            System.out.println("3. Keluar");
            System.out.println("Pilih Menu (1/2/3): ");
            String choice = scanner.nextLine();

            switch (choice) {
                case "1" :
                tampilkanMenuPemesanan();
                break;
                case "2" :
                tampilkanMenuPengelolaan();
                break;
                case "3" :
                running = false;
                break;
                default:
                    System.out.println("Pilihan tidak valid, silahkan input ulang!");
            }
        }
    }

    public static void tampilkanMenuPemesanan(){
        System.out.println("<<< Daftar Menu Restoran >>>");
        tampilkanMenu();

        //mulai mengambil pesanan
        String[] orderedItems = new String[menuList.length];
        int[] quantities = new int[menuList.length];
        pengambilanPemesanan(orderedItems, quantities, 0);

        double totalCost = menghitungTotalBiaya(orderedItems, quantities);

        strukPesanan(orderedItems, quantities, totalCost);

    }
    
    private static void pengambilanPemesanan(String[] orderedItems, int[] quantities, int itemCount){
        System.out.print("Pesanan " + (itemCount + 1) + ": ");
        String itemName = scanner.nextLine();

        if(itemName.equalsIgnoreCase("Selesai")){
            return;
        }

        boolean itemFound = false;
        for(Menu menu : menuList){
            if(menu.name.equalsIgnoreCase(itemName)){
                orderedItems[itemCount] = menu.name;
                System.out.print("Jumlah: ");
                quantities[itemCount] = scanner.nextInt();
                scanner.nextLine(); //line baru
                itemCount++;
                itemFound = true;
                break;
            }
        }

        if (!itemFound){
            System.out.println("Menu tidak ada! silahkan masukkan lagi.");
        }

        pengambilanPemesanan(orderedItems, quantities, itemCount);
    }
    

    public static void tampilkanMenuPengelolaan(){
        boolean running = true;

        while(running){
            System.out.println("1. Tambah Menu");
            System.out.println("2. Ubah Harga Menu");
            System.out.println("3. Hapus Menu");
            System.out.println("4. Keluar");
            System.out.println("Pilih Menu (1/2/3/4)");
            String choice = scanner.nextLine();

            switch (choice) {
                case "1":
                    tambahMenu();
                    break;
                case "2":
                    ubahHargaMenu();
                    break;
                case "3":
                    hapusMenu();
                    break;
                case "4":
                    running = false;
                    break;
                default:
                    System.out.println("Pilihan tidak valid, silahkan input ulang!");
            }
        }
    }

    public static void tambahMenu(){
        System.out.println("<<< TAMBAH MENU >>>");
        System.out.println(" MENU SAAT INI ");
        tampilkanMenu();

        System.out.print("Masukkan nama menu: ");
        String name = scanner.nextLine();
        System.out.print("Masukkan harga menu: ");
        double price = scanner.nextDouble();
        scanner.nextLine(); //menghilangkan enter yang tersisa
        System.out.print("Masukkan kategori (Makanan/Minuman): "); //makanan dan minumannya case sensitive
        String category = scanner.nextLine();

        Menu[] newMenu = new Menu[menuList.length + 1];
        System.arraycopy(menuList, 0, newMenu, 0, menuList.length);
        newMenu[menuList.length] = new Menu(name, price, category);
        menuList = newMenu;

        System.out.println("Menu baru berhasil ditambahkan!");
    }

    public static void ubahHargaMenu(){
        System.out.println(" <<< UBAH HARGA MENU >>>");
        System.out.println(" MENU SAAT INI ");  
        tampilkanMenu();

        System.out.print("Masukkan nama menu yang ingin diubah harganya: ");
        String name = scanner.nextLine();
        System.out.print("Masukkan harga baru: ");
        double price = scanner.nextInt();
        scanner.nextLine(); //menghilangkan enter yang tersisa

        System.out.println("Apakah anda yakin ingin mengubah harga menu ini? (YA/TIDAK)");
        String answer = scanner.nextLine();

        if(answer.equalsIgnoreCase("YA")){
            for(Menu menu : menuList){
                if(menu.getName().equalsIgnoreCase(name)){
                    menu.setPrice(price);
                    System.out.println("Harga pesanan berhasil diubah!");
                    return;
                }
            }
            System.out.println("Menu tidak ditemukan!");
        } else {
            System.out.println("Harga menu tidak jadi diubah");
        }
    }

    public static void hapusMenu(){
        System.out.println(" <<< HAPUS MENU >>>");
        System.out.println(" MENU SAAT INI ");  
        tampilkanMenu();

        System.out.print("Masukkan nama menu yang ingin dihapus: ");
        String name = scanner.nextLine();

        System.out.println("Apakah anda yakin ingin menghapus menu ini? (YA/TIDAK)");
        String answer = scanner.nextLine();

        if(answer.equalsIgnoreCase("YA")){
            Menu[] newMenu = new Menu[menuList.length - 1];
            int j = 0;
            for(Menu menu : menuList){
                if(!menu.getName().equalsIgnoreCase(name)){
                    newMenu[j] = menu;
                    j++;
                }
            }
            menuList = newMenu;
            System.out.println("Menu berhasil dihapus!");
        } else{
            System.out.println("penghapusan menu dibatalkan");
        }
    }

   

    public static double menghitungTotalBiaya(String[] orderedItems, int[] quantities){
        double totalCost = 0;
        for(int i = 0; i < orderedItems.length; i++){
            for(Menu menu : menuList){
                if(menu.name.equalsIgnoreCase(orderedItems[i])){
                    totalCost += menu.price * quantities[i];
                }
            }
        }
        return totalCost;
    }

    public static double applyDiscount(double totalCost){
        if(totalCost > 100000){
            return totalCost * 0.9; //diskon 10 persen
        }
        return totalCost;
    }

    public static void strukPesanan(String[] orderedItems, int[] quantities, double totalCost){
        double tax = 0.1 * applyDiscount(totalCost);
        double serviceCharge = 20000;
        double totalBill = applyDiscount(totalCost) + tax + serviceCharge;

        System.out.println("\n===> Struk Pesanan <===");
        for(int i = 0; i < orderedItems.length; i++){
            for(Menu menu : menuList){
                if(menu.name.equalsIgnoreCase(orderedItems[i])){
                    double itemCost = menu.price * quantities[i];
                    System.out.println(quantities[i] + "x " + menu.name + " -- Rp " + format.format(menu.price) + " = Rp " + format.format(itemCost));
                }
            }
        }

        System.out.println("\nTotal Biaya Pemesanan: Rp " + format.format(totalCost));

        //penawaran beli 1 gratis 1 untuk minuman

        if(totalCost >= 50000){
            System.out.println("Anda mendapatkan penawaran beli satu gratis satu untuk minuman!");
        }

        double discountedTotal = applyDiscount(totalCost);

        System.out.println("Diskon 10%: Rp " + format.format(totalCost - discountedTotal));
        System.out.println("total Biaya Setelah Diskon: Rp " + format.format(discountedTotal));
        System.out.println("PPN 10%: Rp " + format.format(tax));
        System.out.println("Biaya Pelayanan : Rp " + format.format(serviceCharge));
        System.out.println("Total Tagihan: Rp " + format.format(totalBill));
    }

    public static void main(String[] args) {
        tampilkanMenuUtama();        
    }

    
}
